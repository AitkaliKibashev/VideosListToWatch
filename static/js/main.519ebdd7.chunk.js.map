{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","videosList","setVideos","inputValue","setInputValue","changeRating","id","change","prevValue","map","v","videoId","rating","sort","a","b","className","onSubmit","event","preventDefault","setVideosId","split","ampersandPosition","indexOf","substring","value","onChange","target","type","placeholder","width","height","src","title","frameBorder","allow","allowFullScreen","onClick","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAkGeA,MA9Ff,WACI,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KA6BMC,EAAe,SAACC,EAAIC,GACtBL,GAAU,SAAAM,GACN,OAAOA,EAAUC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,UAAYL,EAAd,2BAAuBI,GAAvB,IAA0BE,OAAQF,EAAEE,OAASL,IAASG,SAkBxF,OAFAT,EAAWY,MAJe,SAACC,EAAGC,GAC1B,OAAOA,EAAEH,OAASE,EAAEF,UAMpB,sBAAKI,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,yDACA,uBAAMC,SAnDG,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAc,SAACT,GAAD,OAAaT,GAAU,SAAAM,GAAS,4BAAQA,GAAR,CAAmB,CAACG,UAASC,OAAO,SAExF,GAAIT,EAAY,CACZ,IAAIQ,EAAUR,EAAWkB,MAAM,MAAM,GACjCC,EAAoBX,EAAQY,QAAQ,KAExC,IAA0B,IAAvBD,EAIC,OAFAF,EADAT,EAAUA,EAAQa,UAAU,EAAGF,SAE/BlB,EAAc,IAGlBgB,EAAYT,GACZP,EAAc,MAoCoBY,UAAU,WAAxC,UACI,qBAAKA,UAAU,gBAAf,SACI,uBACIS,MAAOtB,EACPuB,SAAU,SAAAR,GAAK,OAAId,EAAcc,EAAMS,OAAOF,QAC9CG,KAAK,OACLZ,UAAU,eACVa,YAAY,kDAEpB,wBAAQb,UAAU,kCAAlB,sCAGJ,qBAAKA,UAAU,aAAf,SACKf,EAAWQ,KAAI,SAAAC,GAAC,OACb,sBAAaM,UAAU,iBAAvB,UACI,wBAAQc,MAAM,OAAOC,OAAO,MAAMC,IAAG,wCAAmCtB,EAAEC,SACpEsB,MAAM,uBAAuBC,YAAY,IACxCC,MAAM,2FACNC,iBAAe,IAEtB,sBAAKpB,UAAU,SAAf,UACI,wBAAQqB,QAAS,kBAnDxB/B,EAmD0CI,EAAEC,aAlD7DT,GAAU,SAAAM,GACP,OAAOA,EAAU8B,QAAO,SAAA5B,GAAC,OAAIA,EAAEC,UAAYL,QAF9B,IAACA,GAmDsDU,UAAU,sBAAzD,oBACA,sBAAKA,UAAU,SAAf,UACI,wBAAQqB,QAAS,kBAzCxB/B,EAyC8CI,EAAEC,aAxCrEN,EAAaC,EAAI,GADG,IAACA,GAyC0DU,UAAU,uBAA7D,gBACA,yCAAYN,EAAEE,UACd,wBAAQyB,QAAS,kBAvCxB/B,EAuC8CI,EAAEC,aAtCrEN,EAAaC,GAAK,GADE,IAACA,GAuC0DU,UAAU,uBAA7D,wBAXFN,WAkBtB,2BC/EG6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAO5Bb,M","file":"static/js/main.519ebdd7.chunk.js","sourcesContent":["import {useState} from \"react\"\nimport './App.css'\n\n\nfunction App() {\n    const [videosList, setVideos] = useState([])\n    const [inputValue, setInputValue] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const setVideosId = (videoId) => setVideos(prevValue => [...prevValue, {videoId, rating:0}])\n\n        if (inputValue) {\n            let videoId = inputValue.split('v=')[1]\n            let ampersandPosition = videoId.indexOf('&')\n\n            if(ampersandPosition !== -1) {\n                videoId = videoId.substring(0, ampersandPosition)\n                setVideosId(videoId)\n                setInputValue('')\n                return\n            }\n            setVideosId(videoId)\n            setInputValue('')\n        }\n    }\n\n\n\n    const removeVideo = (id) => {\n        setVideos(prevValue => {\n           return prevValue.filter(v => v.videoId !== id)\n        })\n    }\n\n    const changeRating = (id, change) => {\n        setVideos(prevValue => {\n            return prevValue.map(v => v.videoId === id ? {...v, rating: v.rating + change}: v)\n        })\n    }\n\n    const incrementRating = (id) => {\n        changeRating(id, +1)\n    }\n\n    const decrementRating = (id) => {\n        changeRating(id, -1)\n    }\n\n    const biggestToSmallest = (a, b) => {\n        return b.rating - a.rating;\n    }\n\n    videosList.sort(biggestToSmallest)\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <h1>List of videos to watch</h1>\n                <form onSubmit={handleSubmit} className=\"row mb-2\">\n                    <div className=\"col mb-5 mt-5\">\n                        <input\n                            value={inputValue}\n                            onChange={event => setInputValue(event.target.value)}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"https://www.youtube.com/watch?v=ctBt7T8C8QI\" />\n                    </div>\n                    <button className=\"btn btn-success mb-5 mt-5 col-3\">Add video to the list</button>\n\n                </form>\n                <div className=\"video-grid\">\n                    {videosList.map(v =>\n                        <div key={v} className=\"video-col mb-2\">\n                            <iframe width=\"auto\" height=\"238\" src={`https://www.youtube.com/embed/${v.videoId}`}\n                                  title=\"YouTube video player\" frameBorder=\"0\"\n                                   allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                   allowFullScreen\n                            />\n                            <div className=\"footer\">\n                                <button onClick={() => removeVideo(v.videoId)} className=\"btn btn-danger mt-2\" >Remove</button>\n                                <div className=\"rating\">\n                                    <button onClick={() => incrementRating(v.videoId)} className=\"btn btn-primary mb-2\" >+1</button>\n                                    <p>Rating: {v.rating}</p>\n                                    <button onClick={() => decrementRating(v.videoId)} className=\"btn btn-primary mb-2\" >-1</button>\n                                </div>\n                            </div>\n                        </div>\n                        )}\n                </div>\n            </div>\n            <ul>\n\n            </ul>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}